{"version":3,"sources":["ChatList/styles.js","ChatList/chatList.js","Dashboard/styles.js","ChatView/styles.js","ChatView/chatView.js","ChatTextBox/styles.js","ChatTextBox/chatTextBox.js","NewChat/styles.js","NewChat/newChat.js","Dashboard/dashboard.js","Login/styles.js","Login/login.js","serviceWorker.js","Signup/styles.js","Signup/signup.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","color","top","right","ChatList","newChat","props","newChatBtnFn","selectChat","index","selectChatFn","userIsSender","chat","messages","length","sender","userEmail","classes","this","chats","className","Button","variant","fullWidth","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","alignItems","ListItemAvatar","Avatar","alt","users","filter","_user","split","toUpperCase","ListItemText","primary","secondary","Fragment","Typography","component","message","substring","receiverHasRead","ListItemIcon","Divider","Component","withStyles","signOutBtn","bottom","content","overflow","padding","marginLeft","boxSizing","overflowY","userSent","float","clear","wordWrap","marginTop","friendSent","chatHeader","fontSize","textAlign","paddingTop","ChatView","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","user","undefined","id","_usr","_msg","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBox","userClickedInput","messageReadFn","userTyping","e","keyCode","submitMessage","setState","chatText","target","value","messageValid","txt","replace","state","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","main","display","spacing","marginRight","breakpoints","up","input","form","submit","errorText","firebase","require","NewChat","type","username","submitNewChat","a","preventDefault","userExists","chatExists","goToChat","createChat","newChatSubmitFn","sendTo","goToChatFn","buildDocKey","auth","currentUser","email","sort","join","docKey","firestore","collection","doc","get","console","log","exists","userSnapshot","docs","_doc","data","includes","CssBaseline","Paper","onSubmit","FormControl","InputLabel","htmlFor","Input","required","autoFocus","onChange","Dashboard","signOut","chatIndex","selectedChat","newChatFormVisible","messageRead","msg","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","clickedChatWhereNotSender","usersInChat","find","every","indexOf","newChatSubmit","chatObj","set","componentDidMount","onAuthStateChanged","history","push","where","onSnapshot","res","flexDirection","noAccountHeader","signUpLink","textDecoration","fontWeight","Login","password","submitLogin","signInWithEmailAndPassword","then","err","loginError","componenet","margin","autoComplete","to","Boolean","window","location","hostname","match","hasAccountHeader","logInLink","Signup","formIsValid","passwordConfirmation","submitSignup","createUserWithEmailAndPassword","authRes","userObj","dbError","signupError","authError","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4aadc345.chunk.js","sourcesContent":["const styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: 'calc(100% - 35px)',\r\n    position: 'absolute',\r\n    left: '0',\r\n    width: '300px',\r\n    boxShadow: '0px 0px 2px black'\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer'\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: '0px'\r\n  },\r\n  unreadMessage: {\r\n    color: 'red',\r\n    position: 'absolute',\r\n    top: '0',\r\n    right: '5px'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatList extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (this.props.chats.length > 0) {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            className={classes.newChatBtn}\r\n            onClick={this.newChat}>\r\n            New Message\r\n          </Button>\r\n          <List>\r\n            {this.props.chats.map((_chat, _index) => {\r\n              return (\r\n                <div key={_index}>\r\n                  <ListItem\r\n                    onClick={() => this.selectChat(_index)}\r\n                    className={classes.listItem}\r\n                    selected={this.props.selectedChatIndex === _index}\r\n                    alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                      <Avatar alt=\"Remy Sharp\">\r\n                        {_chat.users\r\n                          .filter((_user) => _user !== this.props.userEmail)[0]\r\n                          .split('')[0]\r\n                          .toUpperCase()}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        _chat.users.filter(\r\n                          (_user) => _user !== this.props.userEmail\r\n                        )[0]\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography component=\"span\" color=\"textPrimary\">\r\n                            {_chat.messages[\r\n                              _chat.messages.length - 1\r\n                            ].message.substring(0, 30) + '...'}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      }></ListItemText>\r\n                    {_chat.receiverHasRead === false &&\r\n                    !this.userIsSender(_chat) ? (\r\n                      <ListItemIcon>\r\n                        <NotificationImportant\r\n                          className={\r\n                            classes.unreadMessage\r\n                          }></NotificationImportant>\r\n                      </ListItemIcon>\r\n                    ) : null}\r\n                  </ListItem>\r\n                  <Divider></Divider>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </main>\r\n      );\r\n    } else {\r\n      return (\r\n        <main className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            onClick={this.newChat}\r\n            className={classes.newChatBtn}>\r\n            New Message\r\n          </Button>\r\n          <List></List>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n\r\n  newChat = () => {\r\n    this.props.newChatBtnFn();\r\n  };\r\n\r\n  selectChat = (index) => {\r\n    this.props.selectChatFn(index);\r\n  };\r\n\r\n  userIsSender = (chat) =>\r\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n}\r\n\r\nexport default withStyles(styles)(ChatList);\r\n","const styles = (theme) => ({\r\n  signOutBtn: {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    left: '0px',\r\n    width: '300px',\r\n    borderRadius: '0px',\r\n    backgroundColor: '#227092',\r\n    height: '35px',\r\n    boxShadow: '0px 0px 2px black',\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","const styles = (theme) => ({\r\n  content: {\r\n    height: 'calc(100vh - 100px)',\r\n    overflow: 'auto',\r\n    padding: '25px',\r\n    marginLeft: '300px',\r\n    boxSizing: 'border-box',\r\n    overflowY: 'scroll',\r\n    top: '50px',\r\n    width: 'calc(100% - 300px)',\r\n    position: 'absolute'\r\n  },\r\n\r\n  userSent: {\r\n    float: 'left',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  friendSent: {\r\n    float: 'right',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  chatHeader: {\r\n    width: 'calc(100% - 301px)',\r\n    height: '50px',\r\n    backgroundColor: '#344195',\r\n    position: 'fixed',\r\n    marginLeft: '301px',\r\n    fontSize: '18px',\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    paddingTop: '10px',\r\n    boxSizing: 'border-box'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import withStyles from '@material-ui/core/styles/withStyles';\r\nimport React, { Component } from 'react';\r\nimport styles from './styles';\r\n\r\nclass ChatView extends Component {\r\n  componentDidUpdate = () => {\r\n    const container = document.getElementById('chatview-container');\r\n    if (container) {\r\n      container.scrollTo(0, container.scrollHeight);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, chat, user } = this.props;\r\n\r\n    if (chat === undefined) {\r\n      return <main id=\"chatview-container\" className={classes.content}></main>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            Your conversation with\r\n            {' ' + chat.users.filter((_usr) => _usr !== user)[0]}\r\n          </div>\r\n          <main id=\"chatview-container\" className={classes.content}>\r\n            {chat.messages.map((_msg, _index) => {\r\n              return (\r\n                <div\r\n                  key={_index}\r\n                  className={\r\n                    _msg.sender === user ? classes.userSent : classes.friendSent\r\n                  }>\r\n                  {_msg.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatView);\r\n","const styles = (theme) => ({\r\n  sendBtn: {\r\n    color: 'blue',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'gray'\r\n    }\r\n  },\r\n\r\n  chatTextBoxContainer: {\r\n    position: 'absolute',\r\n    bottom: '15px',\r\n    left: '315px',\r\n    boxSizing: 'border-box',\r\n    overflow: 'auto',\r\n    width: 'calc(100% - 300px - 50px)'\r\n  },\r\n\r\n  chatTextBox: {\r\n    width: 'calc(100% - 25px)'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import TextField from '@material-ui/core/TextField';\r\nimport Send from '@material-ui/icons/Send';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass ChatTextBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chatText: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.chatTextBoxContainer}>\r\n        <TextField\r\n          placeholder=\"Type your message...\"\r\n          onKeyUp={(e) => this.userTyping(e)}\r\n          id=\"chattextbox\"\r\n          className={classes.chatTextBox}\r\n          onFocus={this.userClickedInput}></TextField>\r\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  userClickedInput = () => {\r\n    this.props.messageReadFn();\r\n  };\r\n\r\n  userTyping = (e) =>\r\n    e.keyCode === 13\r\n      ? this.submitMessage()\r\n      : this.setState({ chatText: e.target.value });\r\n\r\n  messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\r\n\r\n  submitMessage = () => {\r\n    if (this.messageValid(this.state.chatText)) {\r\n      this.props.submitMessageFn(this.state.chatText);\r\n      document.getElementById('chattextbox').value = '';\r\n    }\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBox);\r\n","const styles = (theme) => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing() * 3,\r\n    marginRight: theme.spacing() * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: `${theme.spacing() * 2}px ${theme.spacing() *\r\n      3}px ${theme.spacing() * 3}px`,\r\n    position: 'absolute',\r\n    width: '350px',\r\n    top: '50px',\r\n    left: 'calc(50% + 150px - 175px)'\r\n  },\r\n  input: {},\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing()\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing() * 3\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Paper,\r\n  withStyles,\r\n  CssBaseline,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport styles from './styles';\r\nconst firebase = require('firebase');\r\n\r\nclass NewChat extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Send A Message!\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={(e) => this.submitNewChat(e)}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-username\">\r\n                Enter Your Friend's Email\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                autoFocus\r\n                onChange={(e) => this.userTyping('username', e)}\r\n                id=\"new-chat-username\"></Input>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"new-chat-message\">\r\n                Enter your message\r\n              </InputLabel>\r\n              <Input\r\n                required\r\n                className={classes.input}\r\n                onChange={(e) => this.userTyping('message', e)}\r\n                id=\"new-chat-message\"></Input>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case 'username':\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n        break;\r\n\r\n      case 'message':\r\n        this.setState({\r\n          message: e.target.value\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitNewChat = async (e) => {\r\n    e.preventDefault();\r\n    const userExists = await this.userExists();\r\n    if (userExists) {\r\n      const chatExists = await this.chatExists();\r\n      chatExists ? this.goToChat() : this.createChat();\r\n    }\r\n  };\r\n\r\n  createChat = () => {\r\n    this.props.newChatSubmitFn({\r\n      sendTo: this.state.username,\r\n      message: this.state.message\r\n    });\r\n  };\r\n\r\n  goToChat = () => {\r\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n  };\r\n\r\n  buildDocKey = () => {\r\n    return [firebase.auth().currentUser.email, this.state.username]\r\n      .sort()\r\n      .join(':');\r\n  };\r\n\r\n  chatExists = async () => {\r\n    const docKey = this.buildDocKey();\r\n\r\n    const chat = await firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .get();\r\n\r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n  };\r\n\r\n  userExists = async () => {\r\n    const userSnapshot = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .get();\r\n\r\n    const exists = userSnapshot.docs\r\n      .map((_doc) => _doc.data().email)\r\n      .includes(this.state.username);\r\n\r\n    // this.setState({ serverError: !exists });\r\n    return exists;\r\n  };\r\n}\r\nexport default withStyles(styles)(NewChat);\r\n","import React, { Component } from 'react';\r\nimport ChatList from '../ChatList/chatList';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport ChatView from '../ChatView/chatView';\r\nimport ChatTextBox from '../ChatTextBox/chatTextBox';\r\nimport NewChat from '../NewChat/newChat';\r\nconst firebase = require('firebase');\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <ChatList\r\n          history={this.props.history}\r\n          newChatBtnFn={this.newChatBtnClicked}\r\n          selectChatFn={this.selectChat}\r\n          chats={this.state.chats}\r\n          userEmail={this.state.email}\r\n          selectedChatIndex={this.state.selectedChat}></ChatList>\r\n        {this.state.newChatFormVisible ? null : (\r\n          <ChatView\r\n            user={this.state.email}\r\n            chat={this.state.chats[this.state.selectedChat]}></ChatView>\r\n        )}\r\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\r\n          <ChatTextBox\r\n            submitMessageFn={this.submitMessage}\r\n            messageReadFn={this.messageRead}></ChatTextBox>\r\n        ) : null}\r\n        {this.state.newChatFormVisible ? (\r\n          <NewChat\r\n            goToChatFn={this.goToChat}\r\n            newChatSubmitFn={this.newChatSubmit}></NewChat>\r\n        ) : null}\r\n        <Button className={classes.signOutBtn} onClick={this.signOut}>\r\n          Sign Out\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  signOut = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({\r\n      selectedChat: chatIndex,\r\n      newChatFormVisible: false\r\n    });\r\n    this.messageRead();\r\n  };\r\n\r\n  submitMessage = (msg) => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }),\r\n        receiverHasRead: false\r\n      });\r\n  };\r\n\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\r\n\r\n  newChatBtnClicked = () => {\r\n    this.setState({\r\n      newChatFormVisible: true,\r\n      selectedChat: null\r\n    });\r\n  };\r\n\r\n  messageRead = () => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        (_usr) => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    if (this.clickedChatWhereNotSender(this.state.selectedChat)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({\r\n          receiverHasRead: true\r\n        });\r\n    } else {\r\n      console.log('Clicked msg where the user whas the sender');\r\n    }\r\n  };\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find((_chat) =>\r\n      usersInChat.every((_user) => _chat.users.includes(_user))\r\n    );\r\n    this.setState({\r\n      newChatFormVisible: false\r\n    });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  };\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .set({\r\n        receiverHasRead: false,\r\n        users: [this.state.email, chatObj.sendTo],\r\n        messages: [\r\n          {\r\n            message: chatObj.message,\r\n            sender: this.state.email\r\n          }\r\n        ]\r\n      });\r\n    this.setState({\r\n      newChatFormVisible: false\r\n    });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  };\r\n\r\n  clickedChatWhereNotSender = (chatIndex) =>\r\n    this.state.chats[chatIndex].messages[\r\n      this.state.chats[chatIndex].messages.length - 1\r\n    ].sender !== this.state.email;\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(async (_usr) => {\r\n      if (!_usr) {\r\n        this.props.history.push('/login');\r\n      } else {\r\n        await firebase\r\n          .firestore()\r\n          .collection('chats')\r\n          .where('users', 'array-contains', _usr.email)\r\n          .onSnapshot(async (res) => {\r\n            const chats = res.docs.map((_doc) => _doc.data());\r\n            await this.setState({\r\n              email: _usr.email,\r\n              chats: chats\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","const styles = (theme) => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing() * 3,\r\n    marginRight: theme.spacing() * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing() * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing() * 2}px ${theme.spacing() *\r\n      3}px ${theme.spacing() * 3}px`\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing()\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing() * 3\r\n  },\r\n  noAccountHeader: {\r\n    width: '100%'\r\n  },\r\n  signUpLink: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: '#303f9f',\r\n    fontWeight: 'bolder'\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst firebase = require('firebase');\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      loginError: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography componenet=\"h1\" variant=\"h5\">\r\n            Log In!\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"login-email-input\"\r\n                onChange={(e) => this.userTyping('email', e)}></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-password-input\">\r\n                Enter Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                autoComplete=\"password\"\r\n                id=\"login-password-input\"\r\n                onChange={(e) => this.userTyping('password', e)}></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}>\r\n              Log In\r\n            </Button>\r\n          </form>\r\n          {this.state.loginError ? (\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\">\r\n              Incorrect Login Information\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.noAccountHeader}>\r\n            Don't have An Account?\r\n          </Typography>\r\n          <Link className={classes.signUpLink} to=\"/signup\">\r\n            Sign Up!\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case 'email':\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          this.props.history.push('/dashboard');\r\n        },\r\n        (err) => {\r\n          this.setState({ loginError: 'Server error' });\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const styles = (theme) => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing() * 3,\r\n    marginRight: theme.spacing() * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing() * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing() * 2}px ${theme.spacing() *\r\n      3}px ${theme.spacing() * 3}px`\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing()\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing() * 3\r\n  },\r\n  hasAccountHeader: {\r\n    width: '100%'\r\n  },\r\n  logInLink: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: '#303f9f',\r\n    fontWeight: 'bolder'\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/TYpography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './styles';\r\n\r\nconst firebase = require('firebase');\r\n\r\nclass Signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up !\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                onChange={(e) => this.userTyping('email', e)}\r\n                autoFocus\r\n                id=\"signup-email-input\"></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-input\">\r\n                Create A Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={(e) => this.userTyping('password', e)}\r\n                id=\"signup-password-input\"></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\r\n                Confirm Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={(e) => this.userTyping('passwordConfirmation', e)}\r\n                id=\"signup-password-confirmation-input\"></Input>\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}>\r\n              Submit\r\n            </Button>\r\n          </form>\r\n          {this.state.signupError ? (\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\">\r\n              {this.state.signupError}\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.hasAccountHeader}>\r\n            Already have an account?\r\n          </Typography>\r\n          <Link className={classes.logInLink} to=\"/login\">\r\n            Log In!\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case 'email':\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.formIsValid()) {\r\n      this.setState({ signupError: 'Passwords do not match!' });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        (authRes) => {\r\n          const userObj = {\r\n            email: authRes.user.email\r\n          };\r\n          firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .doc(this.state.email)\r\n            .set(userObj)\r\n            .then(\r\n              () => {\r\n                this.props.history.push('/dashboard');\r\n              },\r\n              (dbError) => {\r\n                console.log(dbError);\r\n                this.setState({ signupError: 'Failed to add user' });\r\n              }\r\n            );\r\n        },\r\n        (authError) => {\r\n          console.log(authError);\r\n          this.setState({ signupError: 'Failed to add user' });\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Signup);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Dashboard from './Dashboard/dashboard';\nimport './index.css';\nimport Login from './Login/login';\nimport * as serviceWorker from './serviceWorker';\nimport Signup from './Signup/signup';\n\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBWnJHpuplBs8wVe88ypNB1GPI3wAPikwg',\n  authDomain: 'lr-chat-react.firebaseapp.com',\n  databaseURL: 'https://lr-chat-react.firebaseio.com',\n  projectId: 'lr-chat-react',\n  storageBucket: 'lr-chat-react.appspot.com',\n  messagingSenderId: '799868362297',\n  appId: '1:799868362297:web:2fb8dfe62aa827d65137e8',\n  measurementId: 'G-V766V8TQBS'\n});\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route path=\"/login\" component={Login}></Route>\n      <Route path=\"/signup\" component={Signup}></Route>\n      <Route path=\"/dashboard\" component={Dashboard}></Route>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}